
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dane
 */
public class Decrypt extends javax.swing.JFrame {

    /**
     * Creates new form Decrypt2
     */
        public static Cipher dc;
    public Decrypt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L1 = new javax.swing.JLabel();
        RB1 = new javax.swing.JRadioButton();
        L2 = new javax.swing.JLabel();
        T1 = new javax.swing.JTextField();
        L3 = new javax.swing.JLabel();
        B2 = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        L4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        L1.setFont(new java.awt.Font("United Kingdom", 0, 18)); // NOI18N
        L1.setText("Select Type of decryption");

        RB1.setText("DES");

        L2.setFont(new java.awt.Font("United Kingdom", 0, 18)); // NOI18N
        L2.setText("Enter Cipher Key");

        L3.setFont(new java.awt.Font("United Kingdom", 0, 18)); // NOI18N
        L3.setText("Decrypted Message");

        B2.setFont(new java.awt.Font("Vermin Vibes V", 0, 18)); // NOI18N
        B2.setText("GO BAck");

        B1.setFont(new java.awt.Font("Vermin Vibes V", 0, 18)); // NOI18N
        B1.setText("Decrypt");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        L4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(L4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(B2)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(L3)
                                .addComponent(L1)
                                .addComponent(L2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32)
                                    .addComponent(B1))
                                .addComponent(RB1))
                            .addGap(24, 24, 24))))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(L1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RB1)
                .addGap(24, 24, 24)
                .addComponent(L2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(T1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B1))
                .addGap(43, 43, 43)
                .addComponent(L3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(L4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(B2)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        // TODO add your handling code here:
        if(RB1.isSelected() == true)
        {
            try
            {
                // TODO add your handling code here:
                Class.forName("com.mysql.jdbc.Driver");
           
                String uid = "root";
                String pw = "sql";
                String db_url = "jdbc:mysql://localhost:3306/sem";
                Connection conn = DriverManager.getConnection(db_url, uid, pw);
                Statement stmt = conn.createStatement();
            
                String aa = "select msg from mail;";
            
                ResultSet rs = stmt.executeQuery(aa);
                String msg = "";
            
                while(rs.next())
                {
                    msg = rs.getString("msg");
                }
                
                KeyGenerator kg = KeyGenerator.getInstance("DES");
                SecretKey sk = kg.generateKey();
        
                dc = Cipher.getInstance("DES/ECB/PKCS5Padding");
                dc.init(Cipher.DECRYPT_MODE, sk);
                
            
                byte[] dec = msg.getBytes();
                byte[] dd = dc.doFinal(dec);
                L4.setText(Arrays.toString(dd));
            } 
            catch (ClassNotFoundException ex) 
            {
                Logger.getLogger(Compose.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Compose.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (NoSuchAlgorithmException ex) 
            {
                Logger.getLogger(Compose.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (NoSuchPaddingException ex) 
            {
                Logger.getLogger(Compose.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (InvalidKeyException ex) 
            {
                Logger.getLogger(Decrypt.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (IllegalBlockSizeException ex) 
            {
                Logger.getLogger(Decrypt.class.getName()).log(Level.SEVERE, null, ex);
            } 
            catch (BadPaddingException ex) 
            {
                Logger.getLogger(Decrypt.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_B1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decrypt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JLabel L1;
    private javax.swing.JLabel L2;
    private javax.swing.JLabel L3;
    private javax.swing.JLabel L4;
    private javax.swing.JRadioButton RB1;
    private javax.swing.JTextField T1;
    // End of variables declaration//GEN-END:variables
}
